# Copyright (c) 2014-2023 Snowplow Analytics Ltd. All rights reserved.
#
# This program is licensed to you under the Apache License Version 2.0, and
# you may not use this file except in compliance with the Apache License
# Version 2.0.  You may obtain a copy of the Apache License Version 2.0 at
# http://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Apache License Version 2.0 is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the Apache License Version 2.0 for the specific language
# governing permissions and limitations there under.

# This file (application.conf) contains all necessary configuration options for the Iglu Server.

# 'repoServer' contains configuration options for the repoServer -
# interface and port on which the server will be running
repoServer {
  interface = "0.0.0.0"
  port = 8080
  idleTimeout = 10 seconds
  threadPool = {
    type = "global"
  }
}

# 'postgres' contains configuration options for the postgre instance the server is using
# 'dummy' is in-memory only storage
database {
  type = "postgres"
  host = "postgres"
  port = 5432
  dbname = "igludb"
  username = "sp_user"
  password = "sp_password"
  driver = "org.postgresql.Driver"
  maxPoolSize = 5
  pool {
    type = "hikari"
    connectionTimeout = 5000 millis
    maxLifetime = 1000 millis
    minimumIdle = 5
    maximumPoolSize = 3
    connectionPool = {
      type = "fixed"
      size = 4
    }
    transactionPool = "cached"
  }
  enableStartupChecks = false
}

# Enable additional debug endpoint to output all internal state
debug = true

# Enable the ability to overwrite existing schemas when calling the POST /api/schemas endpoint
patchesAllowed = true

webhooks = {
  # Enable webhooks that will be called when a schema is published or updated
  # with a vendor that matches the specified prefixes
  schemaPublished = [
    {
      uri = "https://example.com/endpoint"
    },
    {
      uri = "https://example2.com/endpoint",
      vendorPrefixes = ["com", "org.acme", "org.snowplow"]
    },
    {
      uri = "https://example3.com/endpoint"
      usePost = true
    },
  ]
}

swagger = {
  baseUrl = "/custom/prefix"
}

preTerminationPeriod = 42 seconds
preTerminationUnhealthy = true
